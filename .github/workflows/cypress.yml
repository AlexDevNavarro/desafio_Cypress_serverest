name: Cypress Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Executar testes diariamente às 02:00 UTC
    - cron: '0 2 * * *'

jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    
    strategy:
      matrix:
        # Executar testes em paralelo
        containers: [1, 2]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          start: npm run start:ci
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
          browser: chrome
          record: true
          parallel: true
          group: 'Tests'
        env:
          # Configurações do Cypress Cloud (opcional)
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
          # Configurações específicas para CI
          CYPRESS_BASE_URL: https://front.serverest.dev
          CYPRESS_API_URL: https://serverest.dev

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots-${{ matrix.containers }}
          path: cypress/screenshots
          retention-days: 7

      - name: Upload videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos-${{ matrix.containers }}
          path: cypress/videos
          retention-days: 7

  # Job separado para testes de API apenas
  api-tests:
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run API tests only
        run: npm run test:api
        env:
          CYPRESS_API_URL: https://serverest.dev

  # Job para testes do frontend apenas
  frontend-tests:
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Frontend tests only
        run: npm run test:frontend
        env:
          CYPRESS_BASE_URL: https://front.serverest.dev
          CYPRESS_API_URL: https://serverest.dev

  # Job para gerar relatório de cobertura
  coverage-report:
    runs-on: ubuntu-22.04
    needs: [cypress-run, api-tests, frontend-tests]
    if: always()
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate test report
        run: |
          echo "## 📊 Resumo dos Testes" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ✅ Testes Executados:" >> $GITHUB_STEP_SUMMARY
          echo "- 🌐 Frontend E2E: 3 cenários" >> $GITHUB_STEP_SUMMARY
          echo "- 🔌 API: 3 cenários" >> $GITHUB_STEP_SUMMARY
          echo "- 📱 Total: 6 cenários principais" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🎯 Aplicações Testadas:" >> $GITHUB_STEP_SUMMARY
          echo "- Frontend: https://front.serverest.dev/" >> $GITHUB_STEP_SUMMARY
          echo "- API: https://serverest.dev/" >> $GITHUB_STEP_SUMMARY
